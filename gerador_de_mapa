import numpy as np
import pandas as pd
import folium


df_endereco = pd.read_excel(f'./base_endereco.xlsx')

df_rota = pd.read_excel(f'./rota.xlsx')

# %%
df_endereco['ID_CNPJ'] = df_endereco['ID_CNPJ'].astype(str)
df_rota['ID_CNPJ'] = df_rota['ID_CNPJ'].astype(str)


df = pd.merge(df_endereco, df_rota[['ROTA_PEDIDO', 'NOME_FANTASIA','ID_CNPJ']], how = 'left', on = ['ID_CNPJ'])

df = df.fillna(0)

df['icon_map'] = np.where(df['ROTA_PEDIDO'] == 0, 'cloud', 'info-sign')

df = df[df['ENDERECO'].str.contains('SANTO ANDRÉ-SP', na=False)]

df = df[df['NOME_FANTASIA']!=0]

# Função para adicionar cores nominais baseadas em valores únicos de uma coluna
def add_nominal_colors(df, column_name):
    # Substituir NaN por 0 na coluna especificada
    df[column_name].fillna(0, inplace=True)
    
    # Obter valores únicos da coluna especificada
    unique_values = df[column_name].unique()
    
    # Definir uma lista de cores nominais
    color_list = [
        'blue', 'green', 'purple', 'orange', 'beige', 'white', 'pink', 'gray', 'black',
        'darkblue', 'darkgreen', 'cadetblue', 'darkpurple',  'lightblue',
        'lightgreen',  'lightgray'
    ]
    
    # Garantir que há cores suficientes para valores únicos
    if len(unique_values) > len(color_list):
        raise ValueError("Número de valores únicos excede o número de cores disponíveis.")
    
    # Criar um dicionário para mapear cada valor único para uma cor nominal
    color_map = {value: color_list[i] for i, value in enumerate(unique_values)}
    
    # Função auxiliar para obter a cor de um valor
    def get_color(value):
        return color_map.get(value, 'red')  # Retorna 'black' para valores não mapeados (não deve ocorrer)
    
    # Adicionar uma nova coluna com as cores correspondentes
    df['COLOR'] = df[column_name].apply(get_color)
    
    return df



# Adicionar cores nominais ao DataFrame
df_with_colors = add_nominal_colors(df, 'ROTA_PEDIDO')

df_google = pd.read_excel(f'./base_google.xlsx')

df_google['NOME_FANTASIA'] = df_google['DSC_ESTABELECIMENTO']

df0 = pd.merge(df_google, df, how='outer', on = ['NOME_FANTASIA'])

mapa = folium.Map(location=[df['LATITUDE'].iloc[0], df['LONGITUDE'].iloc[0]], zoom_start=10)


for index, row in df.iterrows():
    folium.Marker(
        location=[row['LATITUDE'], row['LONGITUDE']],
        icon=folium.Icon(color=row['COLOR'], icon =row['icon_map'] , prefix='glyphicon'),
        popup=f"<b>{row['NOME_FANTASIA']}</b><br>{row['ENDERECO']}<br></b><br>{row['ROTA_PEDIDO']}<br>",
        tooltip=row['NOME_FANTASIA']
    ).add_to(mapa)


mapa.save(f"./mapa_interativo_completo.html")



